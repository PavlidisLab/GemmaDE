{"version":3,"file":"utils.js","sources":["../../src/utils.ts"],"sourcesContent":["\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:undefined|null|boolean|string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport function get_hash(value:boolean|string):string{\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport function addSlashes(str:string):string{\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n}\n"],"names":["hash_key","value","get_hash","escape_html","str","replace","loadDebounce","fn","delay","timeout","callback","self","loading","Math","max","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","trigger","event_args","arguments","indexOf","apply","getSelection","input","start","selectionStart","length","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","target","options","addEventListener","isKeyDown","key_name","count","altKey","ctrlKey","shiftKey","metaKey","getId","el","id","existing_id","getAttribute","setAttribute","addSlashes"],"mappings":"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"}