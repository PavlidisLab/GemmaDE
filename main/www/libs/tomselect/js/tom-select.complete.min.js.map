{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.js","../../node_modules/@orchidjs/sifter/dist/esm/diacritics.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\n\nvar code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\n\nfunction asciifold(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n}\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\n\n\nfunction generateDiacritics() {\n  var latin_convert = {\n    'l·': 'l',\n    'ʼn': 'n',\n    'æ': 'ae',\n    'ø': 'o',\n    'aʾ': 'a',\n    'dž': 'dz'\n  };\n  var diacritics = {}; //var no_latin\t= [];\n\n  code_points.forEach(code_range => {\n    for (let i = code_range[0]; i <= code_range[1]; i++) {\n      let diacritic = String.fromCharCode(i);\n      let latin = diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n      if (latin == diacritic) {\n        //no_latin.push(diacritic);\n        continue;\n      }\n\n      latin = latin.toLowerCase();\n\n      if (latin in latin_convert) {\n        latin = latin_convert[latin];\n      }\n\n      if (!(latin in diacritics)) {\n        diacritics[latin] = latin + latin.toUpperCase();\n      }\n\n      diacritics[latin] += diacritic;\n    }\n  }); //console.log('no_latin',JSON.stringify(no_latin));\n\n  return diacritics;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\n\nvar diacritics = null;\nfunction diacriticRegexPoints(regex) {\n  if (diacritics === null) {\n    diacritics = generateDiacritics();\n  }\n\n  for (let latin in diacritics) {\n    if (diacritics.hasOwnProperty(latin)) {\n      regex = regex.replace(new RegExp(latin, 'g'), '[' + diacritics[latin] + ']');\n    }\n  }\n\n  return regex;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n\nexport { asciifold, diacriticRegexPoints, generateDiacritics };\n//# sourceMappingURL=diacritics.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from './diacritics.js';\n\n// @ts-ignore\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttr(obj, name) {\n  if (!obj) return;\n  return obj[name];\n}\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttrNesting(obj, name) {\n  if (!obj) return;\n  var names = name.split(\".\");\n\n  while (names.length && (obj = obj[names.shift()]));\n\n  return obj;\n}\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n * @param {object} token\n * @return {number}\n */\n\nfunction scoreValue(value, token, weight) {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n}\nfunction escape_regex(str) {\n  return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nfunction propToArray(obj, key) {\n  var value = obj[key];\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n}\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n * @param {array|object} object\n */\n\nfunction iterate(object, callback) {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n}\nfunction cmp(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n}\n\nexport { cmp, escape_regex, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { escape_regex, iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nimport { diacriticRegexPoints, asciifold } from './diacritics.js';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nclass Sifter {\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   * @constructor\n   * @param {array|object} items\n   * @param {object} items\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        regex = escape_regex(word);\n\n        if (this.settings.diacritics) {\n          regex = diacriticRegexPoints(regex);\n        }\n\n        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n        regex = new RegExp(regex, 'i');\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {function}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     * @param {TToken} token\n     * @param {object} data\n     * @return {number}\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field]);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var i = 0,\n            score,\n            sum = 0;\n\n        for (; i < token_count; i++) {\n          score = scoreObject(tokens[i], data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var i, n, sort_fld, sort_flds_count, multiplier, implicit_score;\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty || options.sort,\n          sort_flds = [],\n          multipliers = [];\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     * @param  {string} name\n     * @param  {object} result\n     * @return {string}\n     */\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          sort_flds.push(sort[i]);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      }\n    } else {\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          sort_flds.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    for (i = 0, n = sort_flds.length; i < n; i++) {\n      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n    } // build function\n\n\n    sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    } else if (sort_flds_count === 1) {\n      sort_fld = sort_flds[0].field;\n      multiplier = multipliers[0];\n      return function (a, b) {\n        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n      };\n    } else {\n      return function (a, b) {\n        var i, result, field;\n\n        for (i = 0; i < sort_flds_count; i++) {\n          field = sort_flds[i].field;\n          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n\n        return 0;\n      };\n    }\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n\n      if (Array.isArray(options.fields) && typeof options.fields[0] !== 'object') {\n        var fields = [];\n        options.fields.forEach(fld_name => {\n          fields.push({\n            field: fld_name\n          });\n        });\n        options.fields = fields;\n      }\n\n      options.fields.forEach(field_params => {\n        weights[field_params.field] = 'weight' in field_params ? field_params.weight : 1;\n      });\n    }\n\n    query = asciifold(query + '').toLowerCase().trim();\n    return {\n      options: options,\n      query: query,\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    var fn_sort;\n    var fn_score;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (item, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    fn_sort = self._getSortFunction(search);\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport default Sifter;\n//# sourceMappingURL=sifter.js.map\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number=0 ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:null|Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport function setAttr(el:Element,attrs:{ [key: string]: null|string }){\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport function replaceNode( existing:Node, replacement:Node ){\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:undefined|null|boolean|string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport function get_hash(value:boolean|string):string{\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport function addSlashes(str:string):string{\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\nimport { TomOption } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/dist/esm/sifter.js';\nimport { escape_regex } from '@orchidjs/sifter/dist/esm/utils.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:MouseEvent) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tif( !wrapper.contains(evt.target as HTMLElement) && !dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown',doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self,value);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( value, options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\n\t\tvar last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tif( this.activeItems.indexOf(item) == -1 ){\n\t\t\tthis.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]');\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= get_hash(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self._render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// a child could only have one parent, so if you have more parents clone the child\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tif( header ) group_options.append(header);\n\t\t\t\tgroup_options.append(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.append(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.append(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tdropdown_content.append(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\treturn hashed\n\t\t\t? this.rendered('option',hashed)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\t\tself.buffer = document.createDocumentFragment();\n\n\t\tfor( const child of self.control.children ){\n\t\t\tself.buffer.appendChild(child);\n\t\t}\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\n\t\tvar control = self.control;\n\t\tcontrol.insertBefore(self.buffer, control.firstChild);\n\n\t\tself.buffer = null;\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( !hashed || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\t//if (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\toption_el.selected = true;\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\tself.input.prepend(option_el);\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// remove selected attribute from options whose values are not in self.items\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tconst _opt = option_el as HTMLOptionElement;\n\t\t\t\tif( self.items.indexOf(_opt.value) == -1 ){\n\t\t\t\t\tsetAttr(_opt,{selected:null});\n\t\t\t\t\t_opt.selected = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\tfor( i = self.items.length - 1; i >= 0; i-- ){\n\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t}\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]');\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.clearActiveItems();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.buffer || self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\t\t\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t_render( templateName:string, data?:any ):HTMLElement{\n\t\tvar value, id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:'item'|'option', value:string ):null|HTMLElement{\n\t\treturn this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: {},\n\trequested: {},\n\tloaded: {}\n};\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\treturn class mixin extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} name\n\t\t */\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport getSettings from '../../getSettings.js';\nimport { TomSettings } from '../../types/settings';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\tvar self\t\t= this;\n\tvar changed\t\t= false;\n\n\taddEvent(self.input,'change',()=>{\n\n\t\t// prevent infinite loops\n\t\tif( changed ){\n\t\t\tchanged = false;\n\t\t\treturn;\n\t\t}\n\n\t\tchanged\t\t\t= true;\n\t\tvar settings\t= getSettings( self.input, {} as TomSettings );\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\t\tself.setValue(settings.items);\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('checkbox_options',function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input') as HTMLInputElement;\n\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}else{\n\t\t\t\tcheckbox.checked = false;\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = function(data){\n\t\t\tvar rendered = getDom(orig_render_option.apply(self, arguments));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',function( evt:KeyboardEvent, option:HTMLElement ){\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.apply(self, arguments);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('clear_button',function(this:TomSelect, options) {\n\tvar self = this;\n\n\toptions = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, options);\n\n\tself.hook('after','setup',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\t\t\tself.clear();\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n});\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('drag_drop',function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',function(){\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.apply(self, arguments);\n\t});\n\n\tself.hook('instead','unlock',function(){\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.apply(self, arguments);\n\t});\n\n\tself.hook('after','setup',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\n\n\nTomSelect.define('dropdown_header',function(this:TomSelect, options) {\n\tvar self = this;\n\n\toptions = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, options);\n\n\tself.hook('after','setup',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input ) as HTMLInputElement;\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('after','setup',()=>{\n\n\t\t// set tabIndex on wrapper\n\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : ''+self.tabIndex});\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt:KeyboardEvent) => {\n\n\t\t\tif( self.control.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch (evt.keyCode) {\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('input_autogrow', function(this:TomSelect) {\n\n\tvar self\t\t\t\t\t= this;\n\n\tself.hook('after','setup',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\tif( self.items.length > 0 ){\n\t\t\t\ttest_input.textContent\t= control.value;\n\t\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t\t}else{\n\t\t\t\tcontrol.style.width\t\t= '';\n\t\t\t}\n\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',function(){\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.apply(self, arguments);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_active_items', function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n});\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nTomSelect.define('optgroup_columns', function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',function(evt){\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.apply(self,arguments);\n\t\t}\n\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= optgroup.querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ];\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\n\nTomSelect.define('remove_button',function(this:TomSelect, options) {\n\n\toptions = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = function(){\n\n\t\t\tvar rendered = getDom(orig_render_item.apply(self, arguments));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(this:TomSelect, options:TPluginOptions) {\n\tvar self = this;\n\n\toptions.text = options.text || function(option:TomOption){\n\t\treturn option[self.settings.labelField];\n\t};\n\n\tself.on('item_remove',function(value){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\n\nTomSelect.define('virtual_scroll',function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t= self.loadCallback;\n\n\tvar pagination\t\t\t\t\t= {};\n\tvar dropdown_content;\n\tvar loading_more\t\t\t\t= false;\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t\treturn;\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tfunction canLoadMore(query):boolean{\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t// set the next url that will be\n\tself.setNextUrl = function(value:string,next_url:any):void{\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = function(query:string):any{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl(query);\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',(value:string, options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions();\n\t\t}\n\n\t\torig_loadCallback.call( self, value, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ) option.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.hook('after','setup',()=>{\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:function(){\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:function(){\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',function(){\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent < 0.95 ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","code_points","asciifold","str","normalize","replace","toLowerCase","diacritics","diacriticRegexPoints","regex","latin_convert","l·","ʼn","æ","ø","aʾ","dž","code_range","i","diacritic","String","fromCharCode","latin","toUpperCase","generateDiacritics","hasOwnProperty","RegExp","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","a","b","Sifter","[object Object]","items","settings","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","_getSortFunction","sort_fld","sort_flds_count","multiplier","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","optsUser","assign","fld_name","field_params","trim","tokenize","total","nesting","fn_sort","fn_score","item","filter","limit","slice","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","val","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","getSettings","input","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","required","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","_render","role","haspopup","escapeQuery","label","for","delay","timeout","width","multiple","load","Math","max","clearTimeout","setTimeout","call","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","blur","inputState","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","getScoreFunction","getSearchOptions","calculateScore","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","parent","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","buffer","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","_opt","visibility","display","context","rect","scrollY","left","scrollX","selection","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","changed","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","orig_render_option","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","tabindex","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","scrollHeight"],"mappings":"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"}