{"version":3,"file":"remove_button.js","sources":["../../../src/vanilla.ts","../../../src/utils.ts","../../../src/plugins/remove_button/plugin.ts"],"sourcesContent":["\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number=0 ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:null|Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport function setAttr(el:Element,attrs:{ [key: string]: null|string }){\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport function replaceNode( existing:Element, replacement:Element ){\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:undefined|null|boolean|string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport function get_hash(value:boolean|string):string{\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport function addSlashes(str:string):string{\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n}\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\n\nTomSelect.define('remove_button',function(this:TomSelect, options) {\n\n\toptions = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = function(){\n\n\t\t\tvar rendered = getDom(orig_render_item.apply(self, arguments));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n"],"names":["getDom","query","jquery","HTMLElement","indexOf","div","document","createElement","innerHTML","trim","firstChild","querySelector","escape_html","str","replace","preventDefault","evt","stop","stopPropagation","addEvent","target","type","callback","options","addEventListener","TomSelect","define","Object","assign","label","title","className","append","self","html","hook","orig_render_item","settings","render","item","rendered","apply","arguments","close_button","appendChild","isLocked","value","dataset","removeItem","refreshOptions"],"mappings":"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"}