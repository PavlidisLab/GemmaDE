{"version":3,"file":"plugin.js","sources":["../../../../src/defaults.ts","../../../../src/utils.ts","../../../../src/getSettings.ts","../../../../src/plugins/change_listener/plugin.ts"],"sourcesContent":["\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:undefined|null|boolean|string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport function get_hash(value:boolean|string):string{\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport function addSlashes(str:string):string{\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\nimport { TomOption } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport getSettings from '../../getSettings.js';\nimport { TomSettings } from '../../types/settings';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\tvar self\t\t= this;\n\tvar changed\t\t= false;\n\n\taddEvent(self.input,'change',()=>{\n\n\t\t// prevent infinite loops\n\t\tif( changed ){\n\t\t\tchanged = false;\n\t\t\treturn;\n\t\t}\n\n\t\tchanged\t\t\t= true;\n\t\tvar settings\t= getSettings( self.input, {} as TomSettings );\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\t\tself.setValue(settings.items);\n\t});\n\n});\n"],"names":["options","optgroups","plugins","delimiter","splitOn","persist","diacritics","create","createOnBlur","createFilter","highlight","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","query","length","render","hash_key","value","get_hash","addEvent","target","type","callback","addEventListener","getSettings","input","settings_user","settings","Object","assign","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","tagName","toLowerCase","getAttribute","option","querySelector","textContent","settings_element","items","init_select","optionsMap","group_count","readData","el","data","dataset","json","JSON","parse","addOption","group","hasOwnProperty","arr","Array","isArray","push","option_data","disabled","$option","selected","addGroup","optgroup","id","optgroup_data","children","hasAttribute","child","init_textbox","values","data_raw","trim","split","opt","TomSelect","define","self","changed","setupOptions","setValue"],"mappings":"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"}